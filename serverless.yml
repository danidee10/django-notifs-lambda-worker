service: django-notifs-sqs-lambda-worker
frameworkVersion: '2'
useDotenv: true

provider:
  name: aws
  runtime: python3.9
  lambdaHashingVersion: '20201221'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ses:SendEmail
        - ses:SendRawEmail
      Resource: '*'

  environment:
    DJANGO_SETTINGS_MODULE: ${env:DJANGO_SETTINGS_MODULE}

    NOTIFICATIONS_PUSHER_CHANNELS_URL: ${env:NOTIFICATIONS_PUSHER_CHANNELS_URL}
    NOTIFICATIONS_SLACK_BOT_TOKEN: ${env:NOTIFICATIONS_SLACK_BOT_TOKEN}

    DEFAULT_FROM_EMAIL: ${env:DEFAULT_FROM_EMAIL}
    EMAIL_BACKEND: ${env:EMAIL_BACKEND}

    DEFAULT_FROM_SMS: ${env:DEFAULT_FROM_SMS}
    SMS_BACKEND: ${env:SMS_BACKEND}
    TWILIO_ACCOUNT_SID: ${env:TWILIO_ACCOUNT_SID}
    TWILIO_AUTH_TOKEN: ${env:TWILIO_AUTH_TOKEN}

    NOTIFICATIONS_TWITTER_CONSUMER_KEY: ${env:NOTIFICATIONS_TWITTER_CONSUMER_KEY}
    NOTIFICATIONS_TWITTER_CONSUMER_SECRET: ${env:NOTIFICATIONS_TWITTER_CONSUMER_SECRET}
    NOTIFICATIONS_TWITTER_ACCESS_TOKEN: ${env:NOTIFICATIONS_TWITTER_ACCESS_TOKEN}
    NOTIFICATIONS_TWITTER_ACCESS_TOKEN_SECRET: ${env:NOTIFICATIONS_TWITTER_ACCESS_TOKEN_SECRET}

    NOTIFICATIONS_FCM_WEB_API_KEY: ${env:NOTIFICATIONS_FCM_WEB_API_KEY}
    NOTIFICATIONS_FCM_WEB_PROXY: ${env:NOTIFICATIONS_FCM_WEB_PROXY}

constructs:
  jobs:
    type: queue
    worker:
      handler: handler.consumer
      layers:
        - Ref: PythonRequirementsLambdaLayer

plugins:
  - serverless-lift
  - serverless-python-requirements
package:
  patterns:
    - '!node_modules/**'

custom:
  pythonRequirements:
    slim: true
    slimPatterns:
      - '**/*.egg-info*'
    useDownloadCache: true
    useStaticCache: true
    layer: true